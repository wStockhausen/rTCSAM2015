% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/runJitter.R
\name{runJitter}
\alias{runJitter}
\title{Function to run TCSAM2015 multiple times using jittered initial parameter values.}
\usage{
runJitter(os = "osx", path = ".", model = "tcsam2015", path2model = "",
  configFile = "", numRuns = 3, onlyEvalJitter = FALSE,
  in.csv = "jitterInfo.csv", out.csv = "jitterResults.csv", mcmc = FALSE,
  mc.N = 1e+06, mc.save = 1000, mc.scale = 1000, plotResults = FALSE)
}
\arguments{
\item{os}{- 'win' or 'mac' or 'osx'}

\item{path}{- path for model output}

\item{model}{- TCSAM2015 model executable name}

\item{path2model}{- path to model executable}

\item{configFile}{- path to model configuration file}

\item{numRuns}{- number of jitter runs to make}

\item{onlyEvalJitter}{- flag (T/F) to only evaluate a (previous) set of jitter runs, not make new runs}

\item{in.csv}{- filename for jitter info (seed, obj fun value) from ADMB model run}

\item{out.csv}{- filename for jittered results}

\item{mcmc}{- flag (T/F) to run mcmc on "best" model}

\item{mc.N}{- number of mcmc iterations to make}

\item{mc.save}{- number of iterations to skip when saving mcmc calculations}

\item{mc.scale}{- number of iterations to adjust scale for mcmc calculations}

\item{plotResults}{- T/F to plot final results using \code{???}}
}
\value{
- list w/ 4 elements:
 imx  - index of (1st) smallest value for the objective function
 seed - seed resulting in the smallest objective function
 par  - dataframe with par results from run w/ smallest objective function
 objFuns - vector of objective function values from all model runs
 parList - list of par dataframes for each model run
}
\description{
This functions runs a TCSAM2015 model multiple times, jittering the
initial staarting values to assess model convergence.
}
\details{
For each model run, this function creates a shell script ('./tmp.sh') in the
working directory and uses it to run the ADMB version of the TCSAM2015 model.
Initial model parameters are jittered based on the system clock time as a seed
to the random number generator. The seed and final objective function value are
saved for each model run in a csv file (the value of out.csv).

When all the models requested have been run,
the function determines the seed associated with the 1st model run that yielded
the smallest value for the objective function and re-runs the modelusing this seed
to re-create the model run resulting in the minimum objectve function to recreate
the model output files. The final model run is done estimating the hessian, so
standard deviations for estimated model parameters are available in the .std file.
}

